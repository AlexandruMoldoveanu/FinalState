name: PR-Check and Count MISRA Messages

on:
  pull_request:
    branches:
      - 'develop'
  workflow_dispatch:

jobs:
  PR-Check:
    runs-on: self-hosted
    steps:
      - name: Support long file names
        run: git config --global core.longpaths true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run script with parameters
        run: |
          cd Code
          echo "Reading parameters from file..."
          Get-Content GithubRepos.txt | ForEach-Object {
            Write-Host "Running script with parameter: $_"
            py Interface.py $_
          }
        shell: powershell

      - name: Search for Result files and commit if found
        run: |
          cd $env:GITHUB_WORKSPACE
          $fileTypes = @("result.txt", "parsed_results.txt")
          $destination = "$env:GITHUB_WORKSPACE/Code/Result"
          
          if (!(Test-Path -Path $destination)) {
            New-Item -ItemType Directory -Path $destination
          }

          foreach ($fileType in $fileTypes) {
            $files = Get-ChildItem -Path . -Filter $fileType -Recurse
            if ($files) {
              Write-Host "Found $fileType files:"
              $files | ForEach-Object { Write-Host $_.FullName }

              $files | ForEach-Object { 
                $repoName = $_.FullName -replace '^.*Code\\([^\\]+)\\.*$', '$1'
                $newFileName = "$($fileType -replace '\.txt$', "_$repoName.txt")"
                Copy-Item -Path $_.FullName -Destination "$destination\$newFileName" 
              }
              Write-Host "Copied $fileType files to $destination"
            } else {
              Write-Host "No $fileType files found"
            }
          }

          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git add Code/Result
          git commit -m "Add all result.txt and parsed_results.txt files"
          git push 
        shell: powershell

  Count-MISRA-Messages:
    runs-on: windows-latest
    needs: PR-Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Count MISRA Messages
        run: |
          $files = Get-ChildItem -Path "$env:GITHUB_WORKSPACE/Code/Result" -Filter "parsed_results_*.txt"
          foreach ($file in $files) {
            Write-Host "Processing file: $file.FullName"

            # Read the entire file content
            $content = Get-Content -Path $file.FullName

            # Extract counts by matching specific sections
            $errors = ($content -join "`n" | Select-String -Pattern 'Errors \(\d+\)').Matches.Count
            $warnings = ($content -join "`n" | Select-String -Pattern 'Warnings \(\d+\)').Matches.Count
            $information = ($content -join "`n" | Select-String -Pattern 'Information \(\d+\)').Matches.Count
            $style = ($content -join "`n" | Select-String -Pattern 'Style \(\d+\)').Matches.Count
            $notes = ($content -join "`n" | Select-String -Pattern 'Notes \(\d+\)').Matches.Count

            Write-Host "Errors: $errors"
            Write-Host "Warnings: $warnings"
            Write-Host "Information: $information"
            Write-Host "Style: $style"
            Write-Host "Notes: $notes"

            echo "errors_$($file.Name)=$errors" >> $env:GITHUB_ENV
            echo "warnings_$($file.Name)=$warnings" >> $env:GITHUB_ENV
            echo "information_$($file.Name)=$information" >> $env:GITHUB_ENV
            echo "style_$($file.Name)=$style" >> $env:GITHUB_ENV
            echo "notes_$($file.Name)=$notes" >> $env:GITHUB_ENV
          }
        shell: powershell
